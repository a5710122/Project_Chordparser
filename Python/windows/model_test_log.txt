
===== การทดสอบโมเดล [2025-04-08 18:44:28] =====
โหลดโมเดลสำเร็จ!

=== ข้อมูลโมเดล ===
Input Shape: [   1 6435]
Input Type: <class 'numpy.int8'>
Output Shape: [1 7]
Output Type: <class 'numpy.int8'>


=== ผลลัพธ์ทดสอบ ===
ผลลัพธ์ดิบ (int8):
[[-88 -94 -86 -86 -92 -98 -97]]

ผลลัพธ์หลัง Dequantize (float32):
[[0.15625    0.1328125  0.1640625  0.1640625  0.140625   0.1171875
  0.12109375]]

===== สิ้นสุดการทดสอบ =====


===== การทดสอบโมเดล [2025-04-08 19:13:21] =====
✅ โหลดโมเดลสำเร็จ!

=== ข้อมูลโมเดล ===
Input Shape: [   1 6435]
Input Type: <class 'numpy.int8'>
Input Quantization: (0.008713836781680584, -128)

Output Shape: [1 7]
Output Type: <class 'numpy.int8'>
Output Quantization: (0.00390625, -128)

Class Mapping: {0: 'C', 1: 'D', 2: 'E', 3: 'F', 4: 'G', 5: 'A', 6: 'B'}


=== ผลลัพธ์ทดสอบ ===
ผลลัพธ์ดิบ (int8):
[[ -94  -95  -85  -88  -85  -92 -101]]

=== ขั้นตอน Dequantization ===
สูตร: (output - -128) * 0.00390625

การคำนวณแต่ละค่า:
Index 0 (C): -94 -> (-94 - -128) * 0.00390625 = 0.132812
Index 1 (D): -95 -> (-95 - -128) * 0.00390625 = 0.128906
Index 2 (E): -85 -> (-85 - -128) * 0.00390625 = 0.167969
Index 3 (F): -88 -> (-88 - -128) * 0.00390625 = 0.156250
Index 4 (G): -85 -> (-85 - -128) * 0.00390625 = 0.167969
Index 5 (A): -92 -> (-92 - -128) * 0.00390625 = 0.140625
Index 6 (B): -101 -> (-101 - -128) * 0.00390625 = 0.105469

ผลลัพธ์หลัง Dequantize (float32):
[[0.1328125  0.12890625 0.16796875 0.15625    0.16796875 0.140625
  0.10546875]]

=== ผลลัพธ์การทำนาย ===
โน้ตที่ทำนาย: E
ความมั่นใจ: 14.65%

ความน่าจะเป็นของทุกคลาส:
C: 14.14%
D: 14.08%
E: 14.65%
F: 14.48%
G: 14.65%
A: 14.25%
B: 13.76%

===== สิ้นสุดการทดสอบ =====

